#Creación de listas:
participantes = {
    "mujer": {"ligero": [], "welter": [], "pesado": []},
    "hombre": {"ligero": [], "welter": [], "pesado": []}
}


#Agregar elementos a listas:
#Operadores: ==, >=, <=, and
def datos_participante():
    nombre = input("¿Cuál es tu nombre? ")
        
    sexo = input("¿Cuál es tu sexo? (mujer/hombre) ").lower()
    while sexo != "mujer" and sexo != "hombre":
        print("Respuesta no válida")
        sexo = input("¿Cuál es tu sexo? (mujer/hombre) ").lower() 
        
    peso = float(input("¿Cuál es tu peso? "))

    if peso < 68:
        categoria = "ligero"
    elif peso >= 68 and peso < 80:
        categoria = "welter"
    elif peso >= 80:
        categoria = "pesado"

    participantes[sexo][categoria].append(nombre)
    return nombre, sexo, peso
    
i = 0
capacidad_max = 10   
while i <= capacidad_max:
    datos_participante()
    i = i+1
'''    
print("categoria ligero mujeres", participantes["mujer"]["ligero"])
print("categoria ligero hombres", participantes["hombre"]["ligero"])
print("categoria welter mujeres", participantes["mujer"]["welter"])
print("categoria welter hombres", participantes["hombre"]["welter"])
print("categoria pesado mujeres", participantes["mujer"]["pesado"])
print("categoria pesado hombres", participantes["hombre"]["pesado"])
'''
#Cantidad de elementos en las listas
#operador de suma

#Funciones para calcular cantidad de participantes
def cantidad_mujeres():
    acum = 0
    for a in participantes["mujer"]:
        acum = acum +len(participantes["mujer"][a])
    return acum

def cantidad_hombres():
    acum = 0
    for a in participantes["hombre"]:
        acum = acum +len(participantes["hombre"][a])
    return acum

def cantidad_participantes():
  return cantidad_mujeres()+cantidad_hombres()

#Funciones para calcular cantidad de personas en cada categoría

def cantidad_ligero_m():
    cant = len(participantes["mujer"]["ligero"])
    return cant

def cantidad_ligero_h():
    cant = len(participantes["hombre"]["ligero"])
    return cant

def cantidad_ligero_total():
  return cantidad_ligero_m() + cantidad_ligero_h()

def cantidad_welter_m():
  cant = len(participantes["mujer"]["welter"])
  return cant

def cantidad_welter_h():
  cant = len(participantes["hombre"]["welter"])
  return cant

def cantidad_welter_total():
  return cantidad_welter_m() + cantidad_welter_h()

def cantidad_pesado_m():
  cant = len(participantes["mujer"]["pesado"])
  return cant

def cantidad_pesado_h():
  cant = len(participantes["hombre"]["pesado"])
  return cant

def cantidad_pesado_total():
  return cantidad_pesado_m() + cantidad_pesado_h()

#Funciones para calcular número de combates

def parejas(cantidad):
  return cantidad() // 2

def parejas_ligero_m():
  return parejas(cantidad_ligero_m)

def parejas_welter_m():
  return parejas(cantidad_welter_m)

def parejas_pesado_m():
  return parejas(cantidad_pesado_m)

def combates_mujeres():
  num_combate_m = parejas_ligero_m() + parejas_welter_m() + parejas_pesado_m()
  return num_combate_m

def parejas_ligero_h():
  return parejas(cantidad_ligero_h)

def parejas_welter_h():
  return parejas(cantidad_welter_h)

def parejas_pesado_h():
  return parejas(cantidad_pesado_h)

def combates_hombres():
  num_combate_h = parejas_ligero_h() + parejas_welter_h() + parejas_pesado_h()
  return num_combate_h

def combates_totales():
  num_combates_total = combates_mujeres() + combates_hombres()
  return num_combates_total


#Funciones para calcular el porcentaje de mujeres y hombres en la competencia

def porcentaje_mujeres():
  porcentaje_m = (cantidad_mujeres()*100)/cantidad_participantes()
  porcentaje_m = float(porcentaje_m)
  return ("%.2f" % porcentaje_m)

def porcentaje_hombres():
  porcentaje_h = (cantidad_hombres()*100)/cantidad_participantes()
  porcentaje_h = float(porcentaje_h)
  return ("%.2f" % porcentaje_h)

#Salida
#EF (num_participantes, num_ligero_total, num_welter_total, num_pesado_total, num_combates_total)

print("Mujeres total:", cantidad_mujeres(), "(",porcentaje_mujeres(),"%)")
print("Hombres total:", cantidad_hombres(), "(",porcentaje_hombres(),"%)")
print("Total de participantes:", cantidad_participantes())

print("\nParticipantes categoría ligero:", cantidad_ligero_total())
print("Participantes categoria welter:", cantidad_welter_total())
print("Participantes categoria pesado:", cantidad_pesado_total())

#print("Combates mujeres:", combates_mujeres())
#print("Combates hombres:", combates_hombres())
print("Combates totales:", combates_totales())

#print("Porcentaje de mujeres:", porcentaje_mujeres())
#print("Porcentaje de mujeres:", porcentaje_hombres())


# Crear matrices de combates
def crear_matriz_combate(lista_participantes):
    matriz = []
    i = 0
    while i < len(lista_participantes) - 1:
        fila = [lista_participantes[i], lista_participantes[i + 1]]
        matriz.append(fila)
        i += 2
    return matriz

# Crear matrices para cada categoría y sexo
matriz_ligero_m = crear_matriz_combate(participantes["mujer"]["ligero"])
matriz_ligero_h = crear_matriz_combate(participantes["hombre"]["ligero"])
matriz_welter_m = crear_matriz_combate(participantes["mujer"]["welter"])
matriz_welter_h = crear_matriz_combate(participantes["hombre"]["welter"])
matriz_pesado_m = crear_matriz_combate(participantes["mujer"]["pesado"])
matriz_pesado_h = crear_matriz_combate(participantes["hombre"]["pesado"])

# Mostrar las matrices
print("\nMatrices de combates: ")
print("Combates ligeros mujeres:", matriz_ligero_m)
print("Combates ligeros hombres:", matriz_ligero_h)
print("Combates welter mujeres:", matriz_welter_m)
print("Combates welter hombres:", matriz_welter_h)
print("Combates pesado mujeres:", matriz_pesado_m)
print("Combates pesado hombres:", matriz_pesado_h)

